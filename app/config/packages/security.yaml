security:
    password_hashers:
        App\Entity\Client:
            algorithm: bcrypt
        App\Entity\Member:
            algorithm: bcrypt

    enable_authenticator_manager: true

    firewalls:
        login:
          pattern: ^/api/login
          stateless: true
          provider: all_users
          json_login:
            check_path: /api/login
            username_path: username
            password_path: password
            success_handler: lexik_jwt_authentication.handler.authentication_success
            failure_handler: lexik_jwt_authentication.handler.authentication_failure
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
            anonymous: true
        api:
            pattern: ^/api
            provider: all_users
            stateless: true
            jwt: ~
        api_doc:
            pattern: ^/api/doc
            anonymous: true
            security: false
        main:
            lazy: true

    access_control:
        - { path: ^/api/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/api/doc,   roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/api,       roles: IS_AUTHENTICATED_FULLY }

    providers:
        # used to reload user from session & other features (e.g. switch_user)
        all_users:
            chain:
                providers: ['app_member_provider', 'app_client_provider']
        app_member_provider:
            entity:
                class: App\Entity\Member
                property: username
        app_client_provider:
            entity:
                class: App\Entity\Client
                property: username

    role_hierarchy:
        ROLE_ADMIN: [ROLE_CREATOR, ROLE_CLIENT]